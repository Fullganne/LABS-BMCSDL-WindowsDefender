/*----------------------------------------------------------
MASV: 
	47.01.104.041
	47.01.104.081
	47.01.104.128
	47.01.104.164
HO TEN CAC THANH VIEN NHOM:
	Nguyễn Đức Ân
	Nguyễn Thị Bảo Hà
	Tăng Khải Minh
	Sơn Minh Phúc
LAB: 03 - NHOM 7
NGAY: 05/04/2024
----------------------------------------------------------*/
---a)CAU LENH TAO DB
CREATE DATABASE QLSV7
USE  QLSV7
-- b)CAC CAU LENH TAO TABLE
CREATE TABLE NHANVIEN (
	MANV VARCHAR(20) NOT NULL,
	HOTEN NVARCHAR(100) NOT NULL,
	EMAIL VARCHAR(20),
	LUONG VARBINARY(MAX),
	TENDN NVARCHAR(100) NOT NULL,
	MATKHAU VARBINARY(MAX) NOT NULL,
	PUBKEY VARCHAR(20),
	CONSTRAINT PK_NHANVIEN PRIMARY KEY (MANV)
)
--PRINT HASHBYTES('MD5', '5000000')
--PRINT HASHBYTES('MD5', 'password')
/*
INSERT INTO NHANVIEN VALUES(
	'NV01',
	'NGUYEN VAN A',
	'vana@gmail.com',
	0xD1524ADBBD8EED2BF4D424A311A3C6FD,
	'vanA',
	0x5F4DCC3B5AA765D61D8327DEB882CF99,
	'template'
)
*/

CREATE TABLE HOCPHAN (
	MAHP VARCHAR(20) NOT NULL,
	TENHP NVARCHAR(100) NOT NULL,
	SOTC INT,
	CONSTRAINT PK_HOCPHAN PRIMARY KEY (MAHP)
)
/*
INSERT INTO HOCPHAN VALUES (
	'HP01',
	'Bảo mật CSDL',
	3
)

*/

CREATE TABLE LOP(
	MALOP VARCHAR(20) NOT NULL,
	TENLOP NVARCHAR(100) NOT NULL,
	MANV VARCHAR(20),
	CONSTRAINT PK_LOP PRIMARY KEY (MALOP),
	CONSTRAINT FK_LOP_NHANVIEN FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)
)
/*
INSERT  INTO LOP VALUES(
	'L01',
	N'LỚP SÁNG THỨ 4',
	'NV01'
)
INSERT  INTO LOP VALUES(
	'L02',
	N'LỚP SÁNG THỨ 2',
	'NV01'
)
INSERT  INTO LOP VALUES(
	'L03',
	N'LỚP CHIỀU THỨ 4',
	'NV02'
)
INSERT  INTO LOP
VALUES(
	'L04',
	N'LỚP SÁNG THỨ 3',
	'NV01'
),
(
	'L05',
	N'LỚP CHIỀU THỨ 5',
	'NV02'
)
*/
CREATE TABLE SINHVIEN (
	MASV VARCHAR(20) NOT NULL,
	HOTEN NVARCHAR(100) NOT NULL,
	NGAYSINH DATETIME,
	DIACHI NVARCHAR(200),
	MALOP VARCHAR(20),
	TENDN NVARCHAR(100) NOT NULL,
	MATKHAU VARBINARY(MAX) NOT NULL,
	CONSTRAINT PK_SINHVIEN PRIMARY KEY (MASV),
	CONSTRAINT FK_SINHVIEN_LOP FOREIGN KEY (MALOP) REFERENCES LOP(MALOP)
)
/*
INSERT INTO SINHVIEN VALUES(
	'SV03',
	N'Trần Hải D',
	'2003/07/03',
	N'Hà Nội',
	'L01',
	'haiD',
	0x5F4DCC3B5AA765D61D8327DEB882CF99
)
*/
CREATE TABLE BANGDIEM(
    MASV VARCHAR(20) NOT NULL,
    MAHP VARCHAR(20) NOT NULL,
    DIEMTHI VARBINARY(MAX),
    CONSTRAINT PK_BANGDIEM PRIMARY KEY (MASV, MAHP),
    CONSTRAINT FK_BANGDIEM_SINHVIEN FOREIGN KEY (MASV) REFERENCES SINHVIEN(MASV),
    CONSTRAINT FK_BANGDIEM_HOCPHAN FOREIGN KEY (MAHP) REFERENCES HOCPHAN(MAHP)
);
/*
INSERT INTO BANGDIEM VALUES(
	'SV01',
	'HP01',
	0x45C48CCE2E2D7FBDEA1AFC51C7C6AD26
)
*/
--PRINT HASHBYTES('MD5', '9')

/*
	Để xóa một stored procedure
	DROP PROCEDURE IF EXISTS SP_INS_PUBLIC_NHANVIEN;
*/
GO
--c)CAU LENH TAO STORED PROCEDURE
--i)
CREATE PROCEDURE SP_INS_PUBLIC_NHANVIEN 
    @MANV VARCHAR(20),
    @HOTEN NVARCHAR(100),
    @EMAIL VARCHAR(20),
    @LUONGCB FLOAT, -- Đây là giá trị lương trước khi mã hóa
    @TENDN NVARCHAR(100),
    @MK VARCHAR(100) -- Đây là khóa bí mật dùng để mã hóa lương
AS
BEGIN
    DECLARE @SHA1_HASH VARBINARY(MAX)
    DECLARE @AES_ENCRYPT VARBINARY(MAX)
    DECLARE @PUBKEY VARCHAR(20)

    -- Mã hóa mật khẩu bằng SHA1
    SET @SHA1_HASH = HASHBYTES('SHA1', @MK)

    -- Mã hóa lương bằng AES
    -- Sử dụng khóa bí mật MK để mã hóa dữ liệu
    SET @AES_ENCRYPT = ENCRYPTBYPASSPHRASE(@MK, CONVERT(VARCHAR(20), @LUONGCB))

    -- Giá trị của PUBKEY sẽ bằng MANV
    SET @PUBKEY = @MANV

    -- Thêm dữ liệu vào bảng NHANVIEN
    INSERT INTO NHANVIEN (MANV, HOTEN, EMAIL, LUONG, TENDN, MATKHAU, PUBKEY)
    VALUES (@MANV, @HOTEN, @EMAIL, @AES_ENCRYPT, @TENDN, @SHA1_HASH, @PUBKEY)
END;
/*
SELECT *FROM sys.procedures;
SELECT * FROM sys.asymmetric_keys;
EXEC SP_INS_PUBLIC_NHANVIEN 'NV02', 'NGUYEN VAN A', 'vana@gmail.com', '3000000', 'vanA', 'abcd12';
-- Xóa bản ghi cuối cùng được thêm vào bảng NHANVIEN
DELETE FROM NHANVIEN WHERE MANV = 'NV01'
*/

-- Thực thi stored procedure
EXEC SP_INS_PUBLIC_NHANVIEN 'NV01', 'NGUYEN VAN A', 'vana@gmail.com', '3000000', 'vanA', 'abcd12';
select * from NHANVIEN
go

--ii chưa trả về thông tin nhân viên với dữ liệu lương đã được giải mã.
/*
	Để xóa một stored procedure
	DROP PROCEDURE IF EXISTS SP_SEL_PUBLIC_NHANVIEN;
*/
-- Tạo stored procedure SP_SEL_PUBLIC_NHANVIEN
CREATE PROCEDURE SP_SEL_PUBLIC_NHANVIEN 
    @TENDN NVARCHAR(100),
    @MK VARCHAR(100)
AS
BEGIN
    DECLARE @LUONGCB FLOAT
    DECLARE @LUONG_DECRYPT VARCHAR(100)

    -- Giải mã lương từ LUONG sử dụng mật khẩu MK
    SELECT @LUONG_DECRYPT = CONVERT(VARCHAR(20), DECRYPTBYPASSPHRASE(@MK, LUONG))
    FROM NHANVIEN
    WHERE TENDN = @TENDN

    -- Trả về thông tin nhân viên gồm MANV, HOTEN, EMAIL, LUONGCB
    SELECT MANV, HOTEN, EMAIL, CONVERT(FLOAT, @LUONG_DECRYPT) AS LUONGCB
    FROM NHANVIEN
    WHERE TENDN = @TENDN
END;
EXEC SP_SEL_PUBLIC_NHANVIEN 'vanA', 'abcd12'

-- d
EXEC SP_INS_PUBLIC_NHANVIEN 'NV01', 'NGUYEN VAN A', 'nva@yahoo.com', '3000000', 'NVA', '123456';
EXEC SP_INS_PUBLIC_NHANVIEN 'NV02', 'NGUYEN VAN B', 'nvb@yahoo.com', '2000000', 'NVB', '1234567';
EXEC SP_SEL_PUBLIC_NHANVIEN 'NVA', '123456'
EXEC SP_SEL_PUBLIC_NHANVIEN 'NVB', '1234567'

INSERT INTO HOCPHAN VALUES 
('HP01',N'Bảo mật CSDL',3),
('HP02',N'Kiểm thử nâng cao',3),
('HP03',N'Giáo dục thể chất',2)
SELECT * FROM HOCPHAN
GO

CREATE OR ALTER SP_INS_BANGDIEM
@MASV varchar(20),
@MAHP varchar(20),
@DIEMTHI varchar(10)
as
begin
	if (select count(*) from sys.symmetric_keys where name = 'DIEMTHI') = 0
		exec('create symmetric key DIEMTHI
			with algorithm = AES_256
			encryption by password = '''+'diemthi'+'''')

	exec('open symmetric key DIEMTHI decryption by password = '''+'diemthi'+'''')
	insert into BANGDIEM values(@MASV,@MAHP,encryptbykey(KEY_GUID('DIEMTHI'),@DIEMTHI))

	exec('close symmetric key DIEMTHI')
end;
go

CREATE OR ALTER PROC SP_SEL_BANGDIEM_SINHVIEN_HOCPHAN
	@MASV VARCHAR(50),
	@MANV VARCHAR(50)
AS
BEGIN
	SELECT hp.MAHP, hp.TENHP, hp.SOTC, DECRYPTBYASYMKEY, bd.DIEMTHI FROM SINHVIEN sv 
	LEFT JOIN BANGDIEM bd ON sv.MASV = bd.MASV
	LEFT JOIN HOCPHAN hp ON bd.MAHP = hp.MAHP
	WHERE sv.MASV = @MASV
END
GO

EXEC SP_SEL_BANGDIEM_SINHVIEN_HOCPHAN 'SV01'

SELECT * FROM LOP